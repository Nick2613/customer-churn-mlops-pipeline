version: "3.8"

services:
  # ----------------------------
  # Postgres for Airflow
  # ----------------------------
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5

  # ----------------------------
  # Airflow Webserver
  # ----------------------------
  airflow-webserver:
    image: apache/airflow:2.9.3
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements_airflow.txt:/opt/airflow/requirements_airflow.txt
    ports:
      - "8081:8080"
    command: >
      bash -c "
      sleep 10 &&
      pip install --no-cache-dir --prefer-binary -r /opt/airflow/requirements_airflow.txt &&
      airflow db upgrade &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true &&
      airflow webserver --host 0.0.0.0 --port 8080
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 10s
      retries: 5

  # ----------------------------
  # Airflow Scheduler
  # ----------------------------
  airflow-scheduler:
    image: apache/airflow:2.9.3
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    command: ["airflow", "scheduler"]

  # ----------------------------
  # ML Pipeline Service
  # ----------------------------
  pipeline:
    build:
      context: .
      dockerfile: Dockerfile.pipeline
    volumes:
      - .:/app
    environment:
      PYTHONUNBUFFERED: 1
      MLFLOW_TRACKING_URI: sqlite:///mlflow.db
    command: ["python", "main_pipeline.py"]
